import csv
import random
import operator
import math


# Path for face image database
path = 'dataset'

#load data file
with open()as csvfile
	lines=csv.reader(csvfile)
	for row in lines: 
	print (','.join(row))
	
def  loadDataset(filename, split, trainingSet=[], testSet=[]):
	with open(filename, 'r') as csvfile:
		lines=csv.reader(csvfile)
		dataset= list(lines)
		for x in range(len(dataset)-1):
			for y in range(4):
				dataset[x][y] = float(dataset[x][y])
			if random.random()<split:
				trainingSet.append(dataset[x])
			else:
				testSet.append(dataset[x])
	
trainingSet=[]
testSet=[]
loadDataset(r'iris.data.', 0.66, trainingSet, testSet)
print('Train: '+ repr(len(trainingSet)))
print('Test: '+ repr(len(trainingSet)))

#calculating the similarities between 2 instances
def euclidean_distance(instance1, instance2, length):
        distance = 0
        for x in range(length):
            distance += pow((instance1[x] - instance2[x]), 2)
        return math.sqrt(distance)

#printing the distance		
data1=[2,2,2, 'a']
data2=[4,4,4, 'b']
distance =euclidean_distance(data1, data2,3)
print("Distance: ' + repr(distance))

#selecting instance with the smallest value
 def getNeighbors(trainingSet, testInstance, k):
	distance=[]
	length= len(testInstance)-1
	for x in range(len(trainingSet)):
		dist = euclideanDistance(testInstance, trainingSet[x] length)
		distances.append(trainingSet[x],dist))
	distances.sort(key=operator.itemgetter(100
	neighbors=[]
	for x in range(k):
		neighbors.append(distances[x][0])
	return neighbors
	
	trainSet=[[2,2,2,'a'], [4,4,4,'b']]
	testInstance= [5,5,5]
	k=1
	neighbors= getNeighbors(trainSet, testInstance,1)
	print(neighbors)
	
	
#calculate accuracy
def getAccuracy(trainSet, predictions):
	correct=0
	for x in range(len(testSet)):
		if testSet[x][-1] is predictions[x]:
			correct +=1
	return(co/float(len(testSet)))*100.0